package sonorita;// Generated by the protocol buffer compiler.  DO NOT EDIT!

@SuppressWarnings("hiding")
public interface Blprotocol {

  public static final class Event extends
      com.google.protobuf.nano.MessageNano {

    // enum EventCode
    public static final int FAILED = 0;
    public static final int FINISHED = 1;
    public static final int SKIPPED = 2;
    public static final int CHANGED = 3;
    public static final int PAUSED = 4;
    public static final int UNPAUSED = 5;

    public static final class Metadata extends
        com.google.protobuf.nano.MessageNano {

      private static volatile Metadata[] _emptyArray;
      public static Metadata[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Metadata[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string id = 1;
      public java.lang.String id;

      // optional string artist = 2;
      public java.lang.String artist;

      // optional string album = 3;
      public java.lang.String album;

      // optional string title = 4;
      public java.lang.String title;

      // optional string cover_art_url = 5;
      public java.lang.String coverArtUrl;

      public Metadata() {
        clear();
      }

      public Metadata clear() {
        id = "";
        artist = "";
        album = "";
        title = "";
        coverArtUrl = "";
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.id.equals("")) {
          output.writeString(1, this.id);
        }
        if (!this.artist.equals("")) {
          output.writeString(2, this.artist);
        }
        if (!this.album.equals("")) {
          output.writeString(3, this.album);
        }
        if (!this.title.equals("")) {
          output.writeString(4, this.title);
        }
        if (!this.coverArtUrl.equals("")) {
          output.writeString(5, this.coverArtUrl);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.id.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.id);
        }
        if (!this.artist.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.artist);
        }
        if (!this.album.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(3, this.album);
        }
        if (!this.title.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.title);
        }
        if (!this.coverArtUrl.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(5, this.coverArtUrl);
        }
        return size;
      }

      @Override
      public Metadata mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.id = input.readString();
              break;
            }
            case 18: {
              this.artist = input.readString();
              break;
            }
            case 26: {
              this.album = input.readString();
              break;
            }
            case 34: {
              this.title = input.readString();
              break;
            }
            case 42: {
              this.coverArtUrl = input.readString();
              break;
            }
          }
        }
      }

      public static Metadata parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Metadata(), data);
      }

      public static Metadata parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Metadata().mergeFrom(input);
      }
    }

    private static volatile Event[] _emptyArray;
    public static Event[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Event[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .Event.EventCode type = 1;
    public int type;

    // optional .Event.Metadata now_playing = 2;
    public Blprotocol.Event.Metadata nowPlaying;

    public Event() {
      clear();
    }

    public Event clear() {
      type = Blprotocol.Event.FAILED;
      nowPlaying = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.type != Blprotocol.Event.FAILED) {
        output.writeInt32(1, this.type);
      }
      if (this.nowPlaying != null) {
        output.writeMessage(2, this.nowPlaying);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.type != Blprotocol.Event.FAILED) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
      }
      if (this.nowPlaying != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.nowPlaying);
      }
      return size;
    }

    @Override
    public Event mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case Blprotocol.Event.FAILED:
              case Blprotocol.Event.FINISHED:
              case Blprotocol.Event.SKIPPED:
              case Blprotocol.Event.CHANGED:
              case Blprotocol.Event.PAUSED:
              case Blprotocol.Event.UNPAUSED:
                this.type = value;
                break;
            }
            break;
          }
          case 18: {
            if (this.nowPlaying == null) {
              this.nowPlaying = new Blprotocol.Event.Metadata();
            }
            input.readMessage(this.nowPlaying);
            break;
          }
        }
      }
    }

    public static Event parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Event(), data);
    }

    public static Event parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Event().mergeFrom(input);
    }
  }

  public static final class Request extends
      com.google.protobuf.nano.MessageNano {

    // enum RequestCode
    public static final int PAUSE = 0;
    public static final int PLAY = 1;
    public static final int SKIP = 2;
    public static final int VOLUME_UP = 3;
    public static final int VOLUME_DOWN = 4;
    public static final int CHANGE_PLAYLIST = 5;

    public static final class Track extends
        com.google.protobuf.nano.MessageNano {

      private static volatile Track[] _emptyArray;
      public static Track[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Track[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string id = 1;
      public java.lang.String id;

      // optional string artist = 2;
      public java.lang.String artist;

      // optional string album = 3;
      public java.lang.String album;

      // optional string title = 4;
      public java.lang.String title;

      public Track() {
        clear();
      }

      public Track clear() {
        id = "";
        artist = "";
        album = "";
        title = "";
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.id.equals("")) {
          output.writeString(1, this.id);
        }
        if (!this.artist.equals("")) {
          output.writeString(2, this.artist);
        }
        if (!this.album.equals("")) {
          output.writeString(3, this.album);
        }
        if (!this.title.equals("")) {
          output.writeString(4, this.title);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.id.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.id);
        }
        if (!this.artist.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.artist);
        }
        if (!this.album.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(3, this.album);
        }
        if (!this.title.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.title);
        }
        return size;
      }

      @Override
      public Track mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.id = input.readString();
              break;
            }
            case 18: {
              this.artist = input.readString();
              break;
            }
            case 26: {
              this.album = input.readString();
              break;
            }
            case 34: {
              this.title = input.readString();
              break;
            }
          }
        }
      }

      public static Track parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Track(), data);
      }

      public static Track parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Track().mergeFrom(input);
      }
    }

    private static volatile Request[] _emptyArray;
    public static Request[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Request[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .Request.RequestCode type = 1;
    public int type;

    // repeated .Request.Track playlist = 2;
    public Blprotocol.Request.Track[] playlist;

    public Request() {
      clear();
    }

    public Request clear() {
      type = Blprotocol.Request.PAUSE;
      playlist = Blprotocol.Request.Track.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.type != Blprotocol.Request.PAUSE) {
        output.writeInt32(1, this.type);
      }
      if (this.playlist != null && this.playlist.length > 0) {
        for (int i = 0; i < this.playlist.length; i++) {
          Blprotocol.Request.Track element = this.playlist[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.type != Blprotocol.Request.PAUSE) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
      }
      if (this.playlist != null && this.playlist.length > 0) {
        for (int i = 0; i < this.playlist.length; i++) {
          Blprotocol.Request.Track element = this.playlist[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      return size;
    }

    @Override
    public Request mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case Blprotocol.Request.PAUSE:
              case Blprotocol.Request.PLAY:
              case Blprotocol.Request.SKIP:
              case Blprotocol.Request.VOLUME_UP:
              case Blprotocol.Request.VOLUME_DOWN:
              case Blprotocol.Request.CHANGE_PLAYLIST:
                this.type = value;
                break;
            }
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.playlist == null ? 0 : this.playlist.length;
            Blprotocol.Request.Track[] newArray =
                new Blprotocol.Request.Track[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.playlist, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Blprotocol.Request.Track();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Blprotocol.Request.Track();
            input.readMessage(newArray[i]);
            this.playlist = newArray;
            break;
          }
        }
      }
    }

    public static Request parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Request(), data);
    }

    public static Request parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Request().mergeFrom(input);
    }
  }
}
